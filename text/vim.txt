Lesson 1.1:  MOVING THE CURSOR


   ** To move the cursor, press the h,j,k,l keys as indicated. **
	     ^
	     k		    Hint:  The h key is at the left and moves left.
       < h	 l >		   The l key is at the right and moves right.
	     j			   The j key looks like a down arrow.
	     v

Lesson 1.2: EXITING VIM

  1. Press the <ESC> key (to make sure you are in Normal mode).
  2. Type:	:q! <ENTER>.
     This exits the editor, DISCARDING any changes you have made.

Lesson 1.3: TEXT EDITING - DELETION
    ** Press  x  to delete the character under the cursor. **

Lesson 1.4: TEXT EDITING - INSERTION
    ** Press  i  to insert text. **
  Move the cursor on top of the first characnter AFTER where the text is to be inserted.

Lesson 1.5: TEXT EDITING - APPENDING
    ** Press  A  to append text. **
		     
Lesson 1.6: EDITING A FILE
    ** Use  :wq  to save a file and exit. **


Lesson 2.1: DELETION COMMANDS
    ** Type  dw  to delete a word. **

Lesson 2.2: MORE DELETION COMMANDS
    ** Type  d$	to delete to the end of the line. **

Lesson 2.3: ON OPERATORS AND MOTIONS
  Many commands that change text are made from an operator and a motion.
  The format for a delete command with the  d  delete operator is as follows:

  	d   motion

  Where:
    d      - is the delete operator.
    motion - is what the operator will operate on (listed below).

  A short list of motions:
    w - until the start of the next word, EXCLUDING its first character.
    e - to the end of the current word, INCLUDING the last character.
    $ - to the end of the line, INCLUDING the last character.
		     
Lesson 2.4: USING A COUNT FOR A MOTION
    ** Typing a number before a motion repeats it that many times. **

Lesson 2.5: USING A COUNT TO DELETE MORE
    ** Typing a number with an operator repeats it that many times. **
	 d   number   motion

Lesson 2.6: OPERATING ON LINES
    ** Type  dd   to delete a whole line. **

Lesson 2.7: THE UNDO COMMAND
    ** Press  u	to undo the last commands,   U  to fix a whole line. **
   Type CTRL-R a few times
       to redo the commands (undo the undo's).

Lesson 3.1: THE PUT COMMAND
    ** Type	p  to put previously deleted text after the cursor. **

Lesson 3.2: THE REPLACE COMMAND
    ** Type  rx  to replace the character at the cursor with  x . **

Lesson 3.3: THE CHANGE OPERATOR
    ** To change until the end of a word, type  ce . **
   Notice that  ce  deletes the word and places you in Insert mode.
		       
Lesson 3.4: MORE CHANGES USING c
    ** The change operator is used with the same motions as delete. **
         c    [number]   motion

Lesson 4.1: CURSOR LOCATION AND FILE STATUS
  ** Type CTRL-G to show your location in the file and the file status.
     Type  G  to move to a line in the file. **
NOTE:  You may see the cursor position in the lower right corner of the screen
       This happens when the 'ruler' option is set (see  :help 'ruler'  )
  Press  G  to move you to the bottom of the file.
  Type  gg  to move you to the start of the file.
			
Lesson 4.2: THE SEARCH COMMAND
     ** Type  /  followed by a phrase to search for the phrase. **
  To search for the same phrase again, simply type  n .
  To search for the same phrase in the opposite direction, type  N .
  To search for a phrase in the backward direction, use  ?  instead of  / .
  To go back to where you came from press  CTRL-O
  Repeat to go back further.  CTRL-I goes forward.

Lesson 4.3: MATCHING PARENTHESES SEARCH
  ** Type  %  to find a matching ),], or } (parenthesis or bracket)**

Lesson 4.4: THE SUBSTITUTE COMMAND
  ** Type  :s/old/new/g  to substitute 'new' for 'old'. **
  Adding the  g  flag means to substitute globally in the line.
  To change every occurrence of a character string between two lines,
     type   :#,#s/old/new/g    where #,# are the line numbers of the range
                               of lines where the substitution is to be done.
     Type   :%s/old/new/g      to change every occurrence in the whole file.
     Type   :%s/old/new/gc     to find every occurrence in the whole file,
     			       with a prompt whether to substitute or not.

Lesson 5.1: HOW TO EXECUTE AN EXTERNAL COMMAND
  ** Type  :! (exclamation command) followed by an external command to execute that command. **

Lesson 5.2: MORE ON WRITING FILES
  ** To save the changes made to the text, type  :w FILENAME. **
		    
Lesson 5.3: SELECTING TEXT TO WRITE
  ** To save part of the file, type  v  motion  :w FILENAME **
  Press  v  and move the cursor to the fifth item below.  Notice that the text is highlighted.
  Press the  :  character.  At the bottom of the screen  :'<,'> will appear.
  Type  w TEST  , where TEST is a filename that does not exist yet.  
  NOTE:  Pressing  v  starts Visual selection.  You can move the cursor around
       to make the selection bigger or smaller.  Then you can use an operator
       to do something with the text.  For example,  d  deletes the text.
		   
Lesson 5.4: RETRIEVING AND MERGING FILES
  ** To insert the contents of a file, type  :r FILENAME  **
  The file you retrieve is placed below the cursor line.
  NOTE:  You can also read the output of an external command.  For example,
       :r !ls  reads the output of the ls command and puts it below the
       cursor.

Lesson 6.1: THE OPEN COMMAND
  ** Type  o  to open a line below the cursor and place you in Insert mode. **
  To open up a line ABOVE the cursor, simply type a capital	O 

Lesson 6.2: THE APPEND COMMAND
  ** Type  a  to insert text AFTER the cursor. **
  NOTE:  a, i and A all go to the same Insert mode, the only difference is where
       the characters are inserted.
		    
Lesson 6.3: ANOTHER WAY TO REPLACE
  ** Type a capital  R  to replace more than one character. **
  Press <ESC> to leave Replace mode.

Lesson 6.4: COPY AND PASTE TEXT
  ** Use the  y (= yank) operator to copy text and  p (= paste)  to paste it **

Lesson 6.5: SET OPTION
  ** Set an option so a search or substitute ignores case **
  Set the 'ic' (Ignore case) (= ignore upper/lower case when searching) option by entering:
      :set ic
  Set the 'hlsearch' (= highlight all matching phrases) and 
          'incsearch' (= show partial matches for a search phrase) options:  
      :set hls is
  To disable ignoring case enter:  :set noic
NOTE:  If you want to ignore case for just one search command, use  \c
       in the phrase:  /ignore\c  <ENTER>

Lesson 7.1: GETTING HELP 
  ** To use the on-line help system  type   :help <ENTER> 
  Type  CTRL-W CTRL-W   to jump from one window to another.
  ":help" command. 
	:help w
	:help c_CTRL-D
		      
Lesson 7.2: CREATE A STARTUP SCRIPT
  ** Enable Vim features **
  Vim has many more features than Vi, but most of them are disabled by
  default.  To start using more features you have to create a "vimrc" file.
  Start editing the "vimrc" file (the new file).
	:e ~/.vimrc		for Unix
  Read the example "vimrc" file contents:
	:r $VIMRUNTIME/vimrc_example.vim
  For more info type :help vimrc-intro

Lesson 7.3: COMPLETION
  ** Command line completion with CTRL-D and <TAB> **
  Make sure Vim is not in compatible mode:  :set nocp
  Look what files exist in the directory:  :!ls   or  :!dir
  Type the start of a command:  :e
  Press  CTRL-D  and Vim will show a list of commands that start with "e".
  Press <TAB>  and Vim will complete the command name to ":edit".
  Now add a space and the start of an existing file name:  :edit FIL
  Press <TAB>.  Vim will complete the name (if it is unique).
NOTE:  Completion works for many commands.  Just try pressing CTRL-D and
       <TAB>.  It is especially useful for  :help .

