ESC/P = Epson Standard Code for Printers is a printer control language developed by Epson
to control computer printers.
It was mainly used in dot matrix printers and some inkjet printers, and is stil widely
used in many receipt thermal printers.

Escape sequences used, which start with the escape character ESC (ASCII code 27).

ESC/POS is a variant for controlling receipt printers as commonly used at the point of sale (POS).
OpenSource project 

CUPS = Common UNIX Printing System is a modular printing system for Unix-like computer OS
which allows a computer to act as a print server.
A computer running CUPS is a host that can accept print jobs from client computers, process them,
and send them to the appropriate printer.
CUPS consists of a print spooler (between a computer application and a slow peripheral, such as a printer).
and scheduler, a filter system that converts the print data to a format that the printer will understand,
and a backend system that sends this data to the printer device.
CUPS uses the IPP (Internet Printing Protocol) as the basic for managing print jobs and queues.
It also provides the traditional command line interfaces.
PPD = PostScript Printer Description (Adobe's) - config device driver for CUPS.

Print data goes to a scheduler which sends jobs to a filter system that converts the print job into
a format the printer will understand. The filter system then passes the data on to a backend -
a special filter that sends print data to a device or network connection.


CUPS:
  log     - /var/log/cups/error_log
  config  - /etc/cups/cupsd.conf <--- change level of messages on debug or debug2



Scheduler - IPP/HTTP protocol

Filtering process:
 - raster to PCL
 - raster to ESC/P
 - ...

$ lpstat -p -d  

print
# lp -d <printer> <filename>

# change default printer
$ lpoptions -d printer


lpoptions -p POS58 -l
PageSize/Media Size: *X58mmY210mm X58mmY297mm X58mmY3276mm
CashDrawer/Cash Drawer: 0NoCashDrawer *1CashDrawer1BeforePrinting 2CashDrawer2BeforePrinting 3CashDrawer12BeforePrinting 4CashDrawer1AfterPrinting 5CashDrawer2AfterPrinting 6CashDrawer12AfterPrinting
BlankSpace/Blank space at page's end: 0Print *1NoPrint
FeedDist/Feed distance after print: 0feed3mm 1feed6mm 2feed9mm 3feed12mm 4feed15mm 5feed18mm 6feed21mm 7feed24mm 8feed27mm *9feed30mm 10feed33mm 11feed36mm 12feed39mm 13feed42mm 14feed45mm

udev command:
$ sudo udevadm info /dev/usb/lp0
$ cat /etc/udev/rules.d/50-usb-pos-termal-printer.rules 
SUBSYSTEM=="usbmisc", ATTRS{idVendor}=="0416", ATTRS{idProduct}=="5011", MODE="0666"
$ sudo udevadm control --reload
plug-out/plug-in printer
$ ls -la /dev/usb/lp0 
crw-rw-rw-

POS-5805DD
POS-58 Receipt Printer User Manual
is designed for use for use with electronic instruments such as:
 - ECR;
 - POS;
 - banking;
 - equipment;
 - computer peripheral equipment, etc.

Feature:
 - High Speed printing: 90 mm per second.
 - RS-232(POS-58S); USB(POS-58U)

Print mothod: Thermal
Paper Width:  57.5 mm
Paper Diameter: 38 mm
Resolution:   203DPI
Font:         ASCII(12x24),(8x16)
Head Life:    50 km
Printing width: 48 mm

Feed button: 20 mm

? Debug mode - don't work

ESC/POS Printing command set

Print command:
 -  1 LF                 Print and line feed
 -  2 ESC J n            Print and Feed n dots paper
Line spacing command
 -  3 ESC 2              Select default line spacing
 -  4 ESC 3 n            Set line spacing
 -  5 ESC a n            Select justification (align)
Character command
 -  6 ESC ! n            Set character font size

1. LF (line feed) '\n' = x\0A - prints the data in the print buffer and feeds one line.
ESC (escape) or "Ctrl+[" '\e' (gcc) = x\1B

2. ESC J n - print the data in the print buffer and feeds n dots.
The line space - Feed, Default 30 dots
3. ESC J 2 (default = 30), 4. ESC J 3 n <--- to change line spacing.
(\x1B J 2)

5. ESC a n - (0 = left, 2 = middle, 3 = right)

6. ESC ! n - Select print mode
echo -e "\x1B\x21\x00"

The default value is 0. This command is effective for all characters.

BIT0: 0:Character font 12x24 selected; 1:Character font 8x16 selected
BIT3: 1:Emphasized mode selected; 0:Emphasized mode not selected
BIT4: 1:Double Height mode selected; 0:Double Height mode not selected
BIT5: 1:Double Width mode selected; 0:Double Width mode not selected
BIT7: 1:Unde[rline mode selected ; 0:Underline mode not selected

7. GS ! n - Select Font size x1 x2 x3 x4 times !!! Reverse from Android SDK.
echo -e "\x1D\x21\x00"
Width : BIT0, BIT1
Height : BIT4, BIT5
0x11 = x2 (16 chars);
0x22 = x3 (10 chars);
0x33 = x4 ( 8 chars).


GS B n   Black/White reverse mode           <---- !!! Reverse from Android SDK. not ESC but GS!!!
Hexadecimal \x1D \x42 n 



To test symbol 'h'
echo -e  "ȾȾȾȾȾȾȾ\nh ȾhȾ h\nȾȾȾȾȾȾȾȾ" | pos_big4.sh

